doVAR R> EXIT
UP doVAR UPP
+ UM+ DROP EXIT
doUSER R> @ UP @ + EXIT

$USER CP
$USER NP
$USER SP0
$USER RP0
$USER
$USER #TIB
$USER HLD
$USER BASE
$USER tmp
$USER >IN

?DUP DUP ?branch QDUP1 DUP QDUP1: EXIT
ROT >R SWAP R> SWAP EXIT
2DROP DROP DROP EXIT
2DUP OVER OVER EXIT
D+ >R SWAP >R UM+ R> R> + + EXIT
NOT doLIT -1 XOR EXIT
NEGATE NOT doLIT 1 + EXIT
DNEGATE NOT >R NOT doLIT 1 UM+ R> + EXIT
- NEGATE + EXIT
ABS DUP 0< ?branch ABS1 NEGATE ABS1: EXIT
= XOR ?branch EQU1 doLIT 0 EXIT EQU1: doLIT -1 EXIT
U< 2DUP XOR 0< ?branch ULES1 SWAP DROP 0< EXIT ULES1: - 0< EXIT
< 2DUP XOR 0< ?branch LESS1 DROP 0< EXIT LESS1: - 0< EXIT
MAX 2DUP < ?branch MAX1 SWAP MAX1: DROP EXIT
MIN 2DUP SWAP < ?branch MIN1 SWAP MIN1: DROP EXIT
WITHIN OVER - >R - R> U< EXIT

UM/MOD 2DUP U< ?branch UMM4 NEGATE doLIT 15 >R UMM1: >R DUP UM+ >R >R DUP UM+ R> + DUP R> R@ SWAP >R UM+ R> OR ?branch UMM2 >R DROP doLIT 1 + R> branch UMM3 UMM2: DROP UMM3: R> next UMM1 DROP SWAP EXIT UMM4: DROP 2DROP doLIT -1 DUP EXIT
M/MOD DUP 0< DUP >R ?branch MMOD1 NEGATE >R DNEGATE R> MMOD1: >R DUP 0< ?branch MMOD2 R@ + MMOD2: R> UM/MOD R> ?branch MMOD3 SWAP NEGATE SWAP MMOD3: EXIT
/MOD OVER 0< SWAP M/MOD EXIT
MOD /MOD DROP EXIT
/ /MOD SWAP DROP EXIT

UM* doLIT 0 SWAP doLIT 15 >R UMST1: DUP UM+ >R >R DUP UM+ R> + R> ?branch UMST2 >R OVER UM+ R> + UMST2: next UMST1 ROT DROP EXIT
* UM* DROP EXIT
M* 2DUP XOR 0< >R ABS SWAP ABS UM* R> ?branch MSTA1 DNEGATE MSTA1: EXIT
*/MOD >R M* R> M/MOD EXIT
*/ */MOD SWAP DROP EXIT

CELL+ doLIT CELLL + EXIT
CELL- doLIT CELLL - EXIT
CELLS doLIT CELLL * EXIT
ALIGNED DUP doLIT 0 doLIT CELLL UM/MOD DROP DUP ?branch ALGN1 doLIT CELLL SWAP - ALGN1: + EXIT
BL doLIT 32 EXIT
>CHAR doLIT 127 AND DUP doLIT 127 BL WITHIN ?branch TCHA1 DROP doLIT 95 TCHA1: EXIT
DEPTH SP@ SP0 @ SWAP - doLIT CELLL / EXIT
PICK doLIT 1 + CELLS SP@ + @ EXIT

+! SWAP OVER @ + SWAP ! EXIT
2! SWAP OVER ! CELL+ ! EXIT
2@ DUP CELL+ @ SWAP @ EXIT
COUNT DUP doLIT 1 + SWAP C@ EXIT
HERE CP @ EXIT
PAD HERE doLIT 80 + EXIT
TIB #TIB CELL+ @ EXIT
@EXECUTE @ ?DUP ?branch EXE1 EXECUTE EXE1: EXIT
CMOVE >R branch CMOV2 CMOV1: >R DUP C@ R@ C! doLIT 1 + R> doLIT 1 + CMOV2: next CMOV1 2DROP EXIT
FILL SWAP >R SWAP branch FILL2 FILL1: 2DUP C! doLIT 1 + FILL2: next FILL1 2DROP EXIT
PACK$ ALIGNED DUP >R OVER DUP doLIT 0 doLIT CELLL UM/MOD DROP - OVER + doLIT 0 SWAP ! 2DUP C! doLIT 1 + SWAP CMOVE R> EXIT

DIGIT doLIT 9 OVER < doLIT 7 AND + doLIT 48 + EXIT
EXTRACT doLIT 0 SWAP UM/MOD SWAP DIGIT EXIT
<# PAD HLD ! EXIT
HOLD HLD @ doLIT 1 - DUP HLD ! C! EXIT
# BASE @ EXTRACT HOLD EXIT
#S DIGS1: # DUP ?branch DIGS2 branch DIGS1 DIGS2: EXIT
SIGN 0< ?branch SIGN1 doLIT 45 HOLD SIGN1: EXIT
#> DROP HLD @ PAD OVER - EXIT
str DUP >R ABS <# #S R> SIGN #> EXIT
HEX doLIT 16 BASE ! EXIT
DECIMAL doLIT 10 BASE ! EXIT

DIGIT? >R doLIT 48 - doLIT 9 OVER < ?branch DGTQ1 doLIT 7 - DUP doLIT 10 < OR DGTQ1: DUP R> U< EXIT
NUMBER? BASE @ >R doLIT 0 OVER COUNT OVER C@ doLIT 36 = ?branch NUMQ1 HEX SWAP doLIT 1 + SWAP doLIT 1 - NUMQ1: OVER C@ doLIT 45 = >R SWAP R@ - SWAP R@ + ?DUP ?branch NUMQ6 doLIT 1 - >R NUMQ2: DUP >R C@ BASE @ DIGIT? ?branch NUMQ4 SWAP BASE @ * + R> doLIT 1 + next NUMQ2 R@ SWAP DROP ?branch NUMQ3 NEGATE NUMQ3: SWAP branch NUMQ5 NUMQ4: R> R> 2DROP 2DROP doLIT 0 NUMQ5: DUP NUMQ6: R> 2DROP R> BASE ! EXIT

EMIT TX! EXIT
NUF? KEY doLIT CRR = EXIT
SPACE BL EMIT EXIT
SPACES doLIT 0 MAX >R branch CHAR2 CHAR1: SPACE CHAR2: next CHAR1 EXIT
TYPE >R branch TYPE2 TYPE1: DUP C@ EMIT doLIT 1 + TYPE2: next TYPE1 DROP EXIT
CR doLIT CRR EMIT doLIT LF EMIT EXIT
do$ R> R@ R> COUNT + ALIGNED >R SWAP >R EXIT
$"| do$ EXIT
."| do$ COUNT TYPE EXIT
.R >R str R> OVER - SPACES TYPE EXIT
U.R >R <# #S #> R> OVER - SPACES TYPE EXIT
U. <# #S #> SPACE TYPE EXIT
. BASE @ doLIT 10 XOR ?branch DOT1 U. EXIT DOT1: str SPACE TYPE EXIT
? @ . EXIT

parse tmp ! OVER >R DUP ?branch PARS8 doLIT 1 - tmp @ BL = ?branch PARS3 >R PARS1: BL OVER C@ - 0< NOT ?branch PARS2 doLIT 1 + next PARS1 R> DROP doLIT 0 DUP EXIT PARS2: R> PARS3: OVER SWAP >R PARS4: tmp @ OVER C@ - tmp @ BL = ?branch PARS5 0< PARS5: ?branch PARS6 doLIT 1 + next PARS4 DUP >R branch PARS7 PARS6: R> DROP DUP doLIT 1 + >R PARS7: OVER - R> R> - EXIT PARS8: OVER R> - EXIT
PARSE >R TIB >IN @ + #TIB @ >IN @ - R> parse >IN +! EXIT
.( doLIT 41 PARSE TYPE EXIT
( doLIT 41 PARSE 2DROP EXIT
\ #TIB @ >IN ! EXIT
CHAR BL PARSE DROP C@ EXIT
TOKEN BL PARSE doLIT 31 MIN NP @ OVER - CELL- PACK$ EXIT

START doLIT 1234 . BYE
